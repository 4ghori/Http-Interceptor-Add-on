{"version":3,"sources":["scripts/background.js"],"names":["setTabRequestLog","key","dataToAppend","chrome","storage","local","get","json","push","set","getParameterByName","name","url","replace","regex","RegExp","results","exec","decodeURIComponent","activeTab","windowId","tabId","popupTemplate","popupData","warningclass","rLog","runtime","onInstalled","addListener","details","console","log","previousVersion","tabs","query","active","clear","onActivated","activeInfo","onUpdated","changeInfo","browserAction","setBadgeText","text","remove","toString","onRemoved","removeInfo","webRequest","onBeforeRequest","overLoadedId","includes","currentTab","placeguid","dataToStore","type","redirectUrl","urls","types"],"mappings":"AAAA,YAUA,SAASA,kBAAiBC,EAAKC,GAC7BC,OAAOC,QAAQC,MAAMC,IAAIL,EAAK,SAAUM,GAClCA,EAAKN,GACPM,EAAKN,GAAKO,KAAKN,IAEfK,EAAKN,MACLM,EAAKN,GAAKO,KAAKN,IAEjBC,OAAOC,QAAQC,MAAMI,IAAIF,KAI7B,QAASG,oBAAmBC,EAAMC,GAChCD,EAAOA,EAAKE,QAAQ,UAAW,OAC/B,IAAIC,GAAQ,GAAIC,QAAO,OAASJ,EAAO,qBACnCK,EAAUF,EAAMG,KAAKL,EACzB,OAAKI,GACAA,EAAQ,GACNE,mBAAmBF,EAAQ,GAAGH,QAAQ,MAAO,MAD5B,GADH,KAxBvB,GAAIM,YAAcC,YAAcC,UAC5BC,cACAC,WACFC,aAAc,OACdC,KAAM,GAyBRtB,QAAOuB,QAAQC,YAAYC,YAAY,SAAUC,GAC/C1B,OAAOC,QAAQC,MAAMI,KAAMU,WAAeC,YAAcC,YACxDS,QAAQC,IAAI,kBAAmBF,EAAQG,mBAGzC7B,OAAO8B,KAAKC,OAAQC,QAAQ,GAAQ,SAAUF,GAC5C9B,OAAOC,QAAQC,MAAM+B,QACrBjC,OAAOC,QAAQC,MAAMI,KAAMU,WAAeC,SAAUa,EAAK,GAAGb,SAAUC,MAAOY,EAAK,GAAGZ,SACrFF,WAAcC,SAAUa,EAAK,GAAGb,SAAUC,MAAOY,EAAK,GAAGZ,SAG3DlB,OAAO8B,KAAKI,YAAYT,YAAY,SAAUU,GAC5CnC,OAAOC,QAAQC,MAAMI,KAAMU,WAAeC,SAAUkB,EAAWlB,SAAUC,MAAOiB,EAAWjB,SAC3FF,WAAcC,SAAUkB,EAAWlB,SAAUC,MAAOiB,EAAWjB,SAEjElB,OAAO8B,KAAKM,UAAUX,YAAY,SAAUP,EAAOmB,GAC5CA,EAAW5B,MACdT,OAAOsC,cAAcC,cAAeC,KAAM,GAAItB,MAAOA,IACrDlB,OAAOC,QAAQC,MAAMuC,OAAOvB,EAAMwB,eAItC1C,OAAO8B,KAAKa,UAAUlB,YAAY,SAAUP,EAAO0B,GACjD5C,OAAOsC,cAAcC,cAAeC,KAAM,GAAItB,MAAOA,IACrDlB,OAAOC,QAAQC,MAAMuC,OAAOvB,EAAMwB,cAGpC1C,OAAO6C,WAAWC,gBAAgBrB,YAAY,SAAUC,GACtD,GAAIqB,GAAe,SACnB,IAAIrB,EAAQR,OAASF,UAAUE,OAASQ,EAAQjB,IAAIuC,SAAS,QAAUtB,EAAQjB,IAAIuC,SAAS,aAAc,CACxG,GAAIC,GAAajC,UAAUE,MAAMwB,WAC7BQ,EAAY3C,mBAAmB,YAAamB,EAAQjB,IACxD,IAAIyC,GAAaH,EAAc,CAC7B,GAAII,IAAgBD,UAAW3C,mBAAmB,YAAamB,EAAQjB,KAAMA,IAAKiB,EAAQjB,IAAK2C,KAAM,UACrGvD,kBAAiBoD,EAAYE,GAC7BnD,OAAOsC,cAAcC,cAAeC,KAAM,IAAKtB,MAAOQ,EAAQR,YACzD,CACL,GAAIiC,IAAgBD,UAAW3C,mBAAmB,YAAamB,EAAQjB,KAAMA,IAAKiB,EAAQjB,IAAK2C,KAAM,UACrGvD,kBAAiBoD,EAAYE,GAC7BnD,OAAOsC,cAAcC,cAAeC,KAAM,IAAKtB,MAAOQ,EAAQR,QAEhE,OAASmC,YAAa3B,EAAQjB,IAAIC,QAAQ,uBAAwB,KAAOqC,EAAe,UAG1FO,MAAO,cACPC,OAAQ,aAAc,eACpB","file":"background.js","sourcesContent":["'use strict';\n\nvar activeTab = { windowId: -1, tabId: -1 };\nvar popupTemplate;\nvar popupData = {\n  warningclass: 'hide',\n  rLog: ''\n};\n\n// Helper function\nfunction setTabRequestLog(key, dataToAppend) {\n  chrome.storage.local.get(key, function (json) {\n    if (json[key]) {\n      json[key].push(dataToAppend);\n    } else {\n      json[key] = [];\n      json[key].push(dataToAppend);\n    }\n    chrome.storage.local.set(json);\n  });\n}\n\nfunction getParameterByName(name, url) {\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nchrome.runtime.onInstalled.addListener(function (details) {\n  chrome.storage.local.set({ 'activeTab': { windowId: -1, tabId: -1 } });\n  console.log('previousVersion', details.previousVersion);\n});\n\nchrome.tabs.query({ active: true }, function (tabs) {\n  chrome.storage.local.clear();\n  chrome.storage.local.set({ 'activeTab': { windowId: tabs[0].windowId, tabId: tabs[0].tabId } });\n  activeTab = { windowId: tabs[0].windowId, tabId: tabs[0].tabId };\n});\n\nchrome.tabs.onActivated.addListener(function (activeInfo) {\n  chrome.storage.local.set({ 'activeTab': { windowId: activeInfo.windowId, tabId: activeInfo.tabId } });\n  activeTab = { windowId: activeInfo.windowId, tabId: activeInfo.tabId };\n});\nchrome.tabs.onUpdated.addListener(function (tabId, changeInfo) {\n  if (!changeInfo.url) {\n    chrome.browserAction.setBadgeText({ text: '', tabId: tabId });\n    chrome.storage.local.remove(tabId.toString());\n  }\n});\n\nchrome.tabs.onRemoved.addListener(function (tabId, removeInfo) {\n  chrome.browserAction.setBadgeText({ text: '', tabId: tabId });\n  chrome.storage.local.remove(tabId.toString());\n});\n\nchrome.webRequest.onBeforeRequest.addListener(function (details) {\n  var overLoadedId = '0000000';\n  if (details.tabId == activeTab.tabId && details.url.includes('rya') && details.url.includes('placeguid')) {\n    var currentTab = activeTab.tabId.toString();\n    var placeguid = getParameterByName('placeguid', details.url);\n    if (placeguid != overLoadedId) {\n      var dataToStore = { placeguid: getParameterByName('placeguid', details.url), url: details.url, type: 'warning' };\n      setTabRequestLog(currentTab, dataToStore);\n      chrome.browserAction.setBadgeText({ text: '!', tabId: details.tabId });\n    } else {\n      var dataToStore = { placeguid: getParameterByName('placeguid', details.url), url: details.url, type: 'success' };\n      setTabRequestLog(currentTab, dataToStore);\n      chrome.browserAction.setBadgeText({ text: '!', tabId: details.tabId });\n    }\n    return { redirectUrl: details.url.replace(/(placeguid=).*?(&|$)/, '$1' + overLoadedId + '$2') };\n  }\n}, {\n  urls: ['<all_urls>'],\n  types: ['main_frame', 'sub_frame']\n}, ['blocking']);\n// chrome.webRequest.onCompleted.addListener(function(details){\n//   if (details.tabId==activeTab.tabId &&(details.url.includes(\"rya\") && details.url.includes(\"placeguid\"))){\n//     var currentTab = activeTab.tabId.toString();\n//     var dataToStore = {placeguid:getParameterByName('placeguid', details.url), url:details.url, type:'success'};\n//     setTabRequestLog(currentTab, dataToStore);\n//   }\n// },{\n//     urls: ['<all_urls>'],\n//     types: ['main_frame', 'sub_frame'],\n// });"]}